// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly 1`] = `
<Form
  onSubmit={[Function]}
>
  <FormRow>
    <Field
      component={[Function]}
      label="Name"
      maxLength={10}
      name="name"
      required={true}
    />
  </FormRow>
  <FormRow>
    <Field
      component={[Function]}
      label="Event Type"
      name="eventType"
      options={
        Array [
          Object {
            "label": "Performance",
            "value": "Performance",
          },
          Object {
            "label": "Exhibition",
            "value": "Exhibition",
          },
        ]
      }
      required={true}
      searchable={false}
    />
  </FormRow>
  <FormRow>
    <Field
      component={[Function]}
      containerStyle={
        Object {
          "minWidth": "10rem",
        }
      }
      label="Occurrence Type"
      name="occurrenceType"
      onChange={[Function]}
      options={
        Array [
          Object {
            "label": "Bounded",
            "value": "Bounded",
          },
          Object {
            "label": "Continuous",
            "value": "Continuous",
          },
          Object {
            "label": "One-time",
            "value": "OneTime",
          },
        ]
      }
      required={true}
      searchable={false}
    />
    <Field
      component={[Function]}
      dateFormat="YYYY/MM/DD"
      disabled={false}
      htmlId="dateFrom"
      label="Date From"
      name="dateFrom"
      onChange={[Function]}
      showModal={[Function]}
    />
    <Field
      component={[Function]}
      dateFormat="YYYY/MM/DD"
      disabled={false}
      htmlId="dateTo"
      label="Date To"
      minDate="2017/01/18"
      name="dateTo"
      onChange={[Function]}
      showModal={[Function]}
    />
  </FormRow>
  <FormRow>
    <Field
      component={[Function]}
      entityDetailsFormatter={[Function]}
      entityDetailsUrlTemplate="/venue/{id}"
      entitySearchLabel="Search for a Venue"
      entityType="venue"
      getEntityInProgress={false}
      getSubEntity={[Function]}
      label="Venue"
      name="venue"
      parentFormName="EditEventBasics"
      required={true}
    />
  </FormRow>
  <FormRow>
    <Field
      component={[Function]}
      label="Guidance For Finding The Event"
      maxLength={20}
      name="venueGuidance"
    />
  </FormRow>
  <FormRow>
    <Field
      component={[Function]}
      entityDetailsFormatter={[Function]}
      entityDetailsUrlTemplate="/event-series/{id}"
      entitySearchLabel="Search for an Event Series"
      entityType="event-series"
      getEntityInProgress={false}
      getSubEntity={[Function]}
      label="Event Series"
      name="eventSeries"
      parentFormName="EditEventBasics"
      required={false}
    />
  </FormRow>
  <FormRow>
    <Field
      component={[Function]}
      label="Duration"
      name="duration"
      options={
        Array [
          Object {
            "label": "15 mins",
            "value": "00:15",
          },
          Object {
            "label": "30 mins",
            "value": "00:30",
          },
          Object {
            "label": "45 mins",
            "value": "00:45",
          },
          Object {
            "label": "1 hour",
            "value": "01:00",
          },
          Object {
            "label": "1 hour 15 mins",
            "value": "01:15",
          },
          Object {
            "label": "1 hour 20 mins",
            "value": "01:20",
          },
          Object {
            "label": "1 hour 30 mins",
            "value": "01:30",
          },
          Object {
            "label": "1 hour 40 mins",
            "value": "01:40",
          },
          Object {
            "label": "1 hour 45 mins",
            "value": "01:45",
          },
          Object {
            "label": "2 hours",
            "value": "02:00",
          },
          Object {
            "label": "2 hours 15 mins",
            "value": "02:15",
          },
          Object {
            "label": "2 hours 20 mins",
            "value": "02:20",
          },
          Object {
            "label": "2 hours 30 mins",
            "value": "02:30",
          },
          Object {
            "label": "2 hours 40 mins",
            "value": "02:40",
          },
          Object {
            "label": "2 hours 45 mins",
            "value": "02:45",
          },
          Object {
            "label": "3 hours",
            "value": "03:00",
          },
          Object {
            "label": "3 hours 15 mins",
            "value": "03:15",
          },
          Object {
            "label": "3 hours 20 mins",
            "value": "03:20",
          },
          Object {
            "label": "3 hours 30 mins",
            "value": "03:30",
          },
          Object {
            "label": "3 hours 40 mins",
            "value": "03:40",
          },
          Object {
            "label": "3 hours 45 mins",
            "value": "03:45",
          },
          Object {
            "label": "4 hours",
            "value": "04:00",
          },
          Object {
            "label": "5 hours",
            "value": "05:00",
          },
          Object {
            "label": "6 hours",
            "value": "06:00",
          },
          Object {
            "label": "7 hours",
            "value": "07:00",
          },
          Object {
            "label": "8 hours",
            "value": "08:00",
          },
        ]
      }
    />
    <Field
      component={[Function]}
      label="Event Rating"
      name="rating"
      options={
        Array [
          Object {
            "label": "One star",
            "value": "1",
          },
          Object {
            "label": "Two stars",
            "value": "2",
          },
          Object {
            "label": "Three stars",
            "value": "3",
          },
          Object {
            "label": "Four stars",
            "value": "4",
          },
          Object {
            "label": "Five stars",
            "value": "5",
          },
        ]
      }
    />
    <Field
      component={[Function]}
      label="Minimum Age"
      name="minAge"
      options={
        Array [
          Object {
            "label": "None",
            "value": "",
          },
          Object {
            "label": "1+",
            "value": "1",
          },
          Object {
            "label": "2+",
            "value": "2",
          },
          Object {
            "label": "3+",
            "value": "3",
          },
          Object {
            "label": "4+",
            "value": "4",
          },
          Object {
            "label": "5+",
            "value": "5",
          },
          Object {
            "label": "6+",
            "value": "6",
          },
          Object {
            "label": "7+",
            "value": "7",
          },
          Object {
            "label": "8+",
            "value": "8",
          },
          Object {
            "label": "9+",
            "value": "9",
          },
          Object {
            "label": "10+",
            "value": "10",
          },
          Object {
            "label": "11+",
            "value": "11",
          },
          Object {
            "label": "12+",
            "value": "12",
          },
          Object {
            "label": "13+",
            "value": "13",
          },
          Object {
            "label": "14+",
            "value": "14",
          },
          Object {
            "label": "15+",
            "value": "15",
          },
          Object {
            "label": "16+",
            "value": "16",
          },
          Object {
            "label": "17+",
            "value": "17",
          },
          Object {
            "label": "18+",
            "value": "18",
          },
          Object {
            "label": "21+",
            "value": "21",
          },
        ]
      }
    />
  </FormRow>
  <FormRow>
    <Field
      component={[Function]}
      label="Summary of Event"
      maxLength={30}
      name="summary"
      required={true}
    />
  </FormRow>
  <FormRow>
    <Field
      component={[Function]}
      label="Description of Event"
      maxLength={5000}
      name="description"
    />
  </FormRow>
  <FormRow>
    <Field
      component={[Function]}
      forceSingleLine={true}
      label="Description Credit"
      maxLength={40}
      name="descriptionCredit"
    />
  </FormRow>
  <FormRow>
    <Field
      component={[Function]}
      label="We Say"
      maxLength={50}
      name="weSay"
    />
  </FormRow>
  <FormRow>
    <Field
      component={[Function]}
      containerStyle={
        Object {
          "minWidth": "10rem",
        }
      }
      label="Cost Type"
      name="costType"
      onChange={[Function]}
      options={
        Array [
          Object {
            "label": "Free",
            "value": "Free",
          },
          Object {
            "label": "Paid",
            "value": "Paid",
          },
          Object {
            "label": "Unknown",
            "value": "Unknown",
          },
        ]
      }
      required={true}
      searchable={false}
    />
    <Field
      component={[Function]}
      disabled={true}
      icon={[Function]}
      label="Cost From"
      maxLength={60}
      name="costFrom"
      normalize={[Function]}
      remainingChars={false}
      required={true}
    />
    <Field
      component={[Function]}
      disabled={true}
      icon={[Function]}
      label="Cost To"
      maxLength={70}
      name="costTo"
      remainingChars={false}
      required={true}
    />
  </FormRow>
  <FormRow>
    <Field
      component={[Function]}
      containerStyle={
        Object {
          "minWidth": "25rem",
        }
      }
      label="Booking Type"
      name="bookingType"
      onChange={[Function]}
      options={
        Array [
          Object {
            "label": "Not Required",
            "value": "NotRequired",
          },
          Object {
            "label": "Required",
            "value": "Required",
          },
          Object {
            "label": "Required for Non-Members",
            "value": "RequiredForNonMembers",
          },
        ]
      }
      required={true}
      searchable={false}
    />
    <Field
      component={[Function]}
      dateFormat="YYYY/MM/DD"
      disabled={false}
      htmlId="bookingOpens"
      label="Booking Opens"
      name="bookingOpens"
      showModal={[Function]}
    />
  </FormRow>
  <FormRow>
    <Field
      component={[Function]}
      label="Links"
      linkActions={Object {}}
      name="links"
      parentFormName="EditEventBasics"
    />
  </FormRow>
  <Divider
    type="basic"
  />
  <FormError
    error={null}
  />
  <FormButtons
    onCancel={null}
    submitLabel="Next"
    submitting={false}
  />
</Form>
`;

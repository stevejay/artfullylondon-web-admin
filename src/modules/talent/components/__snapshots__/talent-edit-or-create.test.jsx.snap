// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly when creating a talent 1`] = `
<React.Fragment>
  <EntityImage
    entityType="talent"
    showCarousel={false}
  />
  <EntityHeading>
    New Talent
  </EntityHeading>
  <EntityDetailsContainer
    type="default"
  >
    <Connect(ReduxForm)
      initialValues={
        Object {
          "commonRole": "",
          "createdDate": null,
          "description": EditorValue {
            "_cache": Object {
              "html": "",
            },
            "_editorState": EditorState {
              "_immutable": Immutable.Record {
                "allowUndo": true,
                "currentContent": Immutable.Record {
                  "entityMap": Object {
                    "__add": [Function],
                    "__create": [Function],
                    "__get": [Function],
                    "__getLastCreatedEntityKey": [Function],
                    "__mergeData": [Function],
                    "__replaceData": [Function],
                    "add": [Function],
                    "create": [Function],
                    "get": [Function],
                    "getLastCreatedEntityKey": [Function],
                    "mergeData": [Function],
                    "replaceData": [Function],
                  },
                  "blockMap": Immutable.OrderedMap {
                    "4j32d": Immutable.Record {
                      "key": "4j32d",
                      "type": "unstyled",
                      "text": "",
                      "characterList": Immutable.List [],
                      "depth": 0,
                      "data": Immutable.Map {},
                    },
                  },
                  "selectionBefore": Immutable.Record {
                    "anchorKey": "4j32d",
                    "anchorOffset": 0,
                    "focusKey": "4j32d",
                    "focusOffset": 0,
                    "isBackward": false,
                    "hasFocus": false,
                  },
                  "selectionAfter": Immutable.Record {
                    "anchorKey": "4j32d",
                    "anchorOffset": 0,
                    "focusKey": "4j32d",
                    "focusOffset": 0,
                    "isBackward": false,
                    "hasFocus": false,
                  },
                },
                "decorator": CompositeDraftDecorator {
                  "_decorators": Array [
                    Object {
                      "component": [Function],
                      "strategy": [Function],
                    },
                    Object {
                      "component": [Function],
                      "strategy": [Function],
                    },
                  ],
                },
                "directionMap": Immutable.OrderedMap {
                  "4j32d": "LTR",
                },
                "forceSelection": false,
                "inCompositionMode": false,
                "inlineStyleOverride": null,
                "lastChangeType": null,
                "nativelyRenderedContent": null,
                "redoStack": Immutable.Stack [],
                "selection": Immutable.Record {
                  "anchorKey": "4j32d",
                  "anchorOffset": 0,
                  "focusKey": "4j32d",
                  "focusOffset": 0,
                  "isBackward": false,
                  "hasFocus": false,
                },
                "treeMap": Immutable.OrderedMap {
                  "4j32d": Immutable.List [
                    Immutable.Record {
                      "start": 0,
                      "end": 0,
                      "decoratorKey": null,
                      "leaves": Immutable.List [
                        Immutable.Record {
                          "start": 0,
                          "end": 0,
                        },
                      ],
                    },
                  ],
                },
                "undoStack": Immutable.Stack [],
              },
            },
          },
          "descriptionCredit": null,
          "firstNames": "",
          "id": null,
          "images": Array [],
          "lastName": "",
          "links": Array [],
          "status": "Active",
          "talentType": "Individual",
          "validStatuses": Array [
            Object {
              "label": "Active",
              "value": "Active",
            },
          ],
          "version": 0,
          "weSay": "",
        }
      }
      isEdit={false}
      onCancel={[Function]}
      onSubmit={[Function]}
    />
  </EntityDetailsContainer>
</React.Fragment>
`;

exports[`should render correctly when editing a talent 1`] = `
<React.Fragment>
  <EntityImage
    entityType="talent"
    images={Array []}
    showCarousel={false}
  />
  <EntityHeading>
    First Last
  </EntityHeading>
  <EntityDetailsContainer
    type="default"
  >
    <Connect(ReduxForm)
      initialValues={
        Object {
          "commonRole": "",
          "createdDate": null,
          "description": EditorValue {
            "_cache": Object {
              "html": "",
            },
            "_editorState": EditorState {
              "_immutable": Immutable.Record {
                "allowUndo": true,
                "currentContent": Immutable.Record {
                  "entityMap": Object {
                    "__add": [Function],
                    "__create": [Function],
                    "__get": [Function],
                    "__getLastCreatedEntityKey": [Function],
                    "__mergeData": [Function],
                    "__replaceData": [Function],
                    "add": [Function],
                    "create": [Function],
                    "get": [Function],
                    "getLastCreatedEntityKey": [Function],
                    "mergeData": [Function],
                    "replaceData": [Function],
                  },
                  "blockMap": Immutable.OrderedMap {
                    "4j32d": Immutable.Record {
                      "key": "4j32d",
                      "type": "unstyled",
                      "text": "",
                      "characterList": Immutable.List [],
                      "depth": 0,
                      "data": Immutable.Map {},
                    },
                  },
                  "selectionBefore": Immutable.Record {
                    "anchorKey": "4j32d",
                    "anchorOffset": 0,
                    "focusKey": "4j32d",
                    "focusOffset": 0,
                    "isBackward": false,
                    "hasFocus": false,
                  },
                  "selectionAfter": Immutable.Record {
                    "anchorKey": "4j32d",
                    "anchorOffset": 0,
                    "focusKey": "4j32d",
                    "focusOffset": 0,
                    "isBackward": false,
                    "hasFocus": false,
                  },
                },
                "decorator": CompositeDraftDecorator {
                  "_decorators": Array [
                    Object {
                      "component": [Function],
                      "strategy": [Function],
                    },
                    Object {
                      "component": [Function],
                      "strategy": [Function],
                    },
                  ],
                },
                "directionMap": Immutable.OrderedMap {
                  "4j32d": "LTR",
                },
                "forceSelection": false,
                "inCompositionMode": false,
                "inlineStyleOverride": null,
                "lastChangeType": null,
                "nativelyRenderedContent": null,
                "redoStack": Immutable.Stack [],
                "selection": Immutable.Record {
                  "anchorKey": "4j32d",
                  "anchorOffset": 0,
                  "focusKey": "4j32d",
                  "focusOffset": 0,
                  "isBackward": false,
                  "hasFocus": false,
                },
                "treeMap": Immutable.OrderedMap {
                  "4j32d": Immutable.List [
                    Immutable.Record {
                      "start": 0,
                      "end": 0,
                      "decoratorKey": null,
                      "leaves": Immutable.List [
                        Immutable.Record {
                          "start": 0,
                          "end": 0,
                        },
                      ],
                    },
                  ],
                },
                "undoStack": Immutable.Stack [],
              },
            },
          },
          "descriptionCredit": null,
          "firstNames": "",
          "id": null,
          "images": Array [],
          "lastName": "",
          "links": Array [],
          "status": "Active",
          "talentType": "Individual",
          "validStatuses": Array [
            Object {
              "label": "Active",
              "value": "Active",
            },
          ],
          "version": 0,
          "weSay": "",
        }
      }
      isEdit={true}
      onCancel={[Function]}
      onSubmit={[Function]}
    />
  </EntityDetailsContainer>
</React.Fragment>
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly 1`] = `
<React.Fragment>
  <Image
    entityType="venue"
    images={Array []}
    showCarousel={false}
  />
  <EntityHeading>
    The Name
  </EntityHeading>
  <EntityDetailsContainer
    type="default"
  >
    <EntityInfoBar
      entity={
        FullVenue {
          "_links": LinkCollection {
            "_links": undefined,
          },
          "entity": Object {
            "images": Array [],
            "latitude": 1,
            "longitude": 2,
            "name": "The Name",
          },
          "postcodeDistrict": null,
        }
      }
    />
    <EntityColumnLayout>
      <EntityColumn>
        <EntityDescription
          entity={
            FullVenue {
              "_links": LinkCollection {
                "_links": undefined,
              },
              "entity": Object {
                "images": Array [],
                "latitude": 1,
                "longitude": 2,
                "name": "The Name",
              },
              "postcodeDistrict": null,
            }
          }
        />
        <EntityWeSay
          entity={
            FullVenue {
              "_links": LinkCollection {
                "_links": undefined,
              },
              "entity": Object {
                "images": Array [],
                "latitude": 1,
                "longitude": 2,
                "name": "The Name",
              },
              "postcodeDistrict": null,
            }
          }
        />
        <EntityExternalLinks
          entity={
            FullVenue {
              "_links": LinkCollection {
                "_links": undefined,
              },
              "entity": Object {
                "images": Array [],
                "latitude": 1,
                "longitude": 2,
                "name": "The Name",
              },
              "postcodeDistrict": null,
            }
          }
        />
      </EntityColumn>
      <EntityColumn>
        <OpeningTimes
          dateStr="2018/01/01"
          entity={
            FullVenue {
              "_links": LinkCollection {
                "_links": undefined,
              },
              "entity": Object {
                "images": Array [],
                "latitude": 1,
                "longitude": 2,
                "name": "The Name",
              },
              "postcodeDistrict": null,
            }
          }
        />
        <EntityAddress
          venue={
            FullVenue {
              "_links": LinkCollection {
                "_links": undefined,
              },
              "entity": Object {
                "images": Array [],
                "latitude": 1,
                "longitude": 2,
                "name": "The Name",
              },
              "postcodeDistrict": null,
            }
          }
        />
        <EntityDisabilityAccess
          entity={
            FullVenue {
              "_links": LinkCollection {
                "_links": undefined,
              },
              "entity": Object {
                "images": Array [],
                "latitude": 1,
                "longitude": 2,
                "name": "The Name",
              },
              "postcodeDistrict": null,
            }
          }
        />
      </EntityColumn>
    </EntityColumnLayout>
  </EntityDetailsContainer>
  <BasicSection>
    <LazyLoad
      height={300}
      offset={0}
      once={true}
      overflow={false}
      resize={false}
      scroll={true}
      unmountIfInvisible={false}
    >
      <EntityMap
        pin={
          Object {
            "lat": 1,
            "lng": 2,
          }
        }
        zoom={14}
      />
    </LazyLoad>
  </BasicSection>
  <BasicSection>
    <LazyLoad
      height={100}
      offset={0}
      once={true}
      overflow={false}
      resize={false}
      scroll={true}
      unmountIfInvisible={false}
    >
      <withState(withState(MonitorCollection))
        getInProgress={false}
        gridRowComponent={[Function]}
        monitors={null}
        onMounted={[Function]}
        onSubmit={[Function]}
        title="Pending Venue Monitors"
        venue={
          FullVenue {
            "_links": LinkCollection {
              "_links": undefined,
            },
            "entity": Object {
              "images": Array [],
              "latitude": 1,
              "longitude": 2,
              "name": "The Name",
            },
            "postcodeDistrict": null,
          }
        }
      />
    </LazyLoad>
  </BasicSection>
  <BasicSection>
    <LazyLoad
      height={100}
      offset={0}
      once={true}
      overflow={false}
      resize={false}
      scroll={true}
      unmountIfInvisible={false}
    >
      <withState(withState(MonitorCollection))
        getInProgress={false}
        gridRowComponent={[Function]}
        monitors={null}
        onMounted={[Function]}
        onSubmit={[Function]}
        title="Pending Event Monitors"
        venue={
          FullVenue {
            "_links": LinkCollection {
              "_links": undefined,
            },
            "entity": Object {
              "images": Array [],
              "latitude": 1,
              "longitude": 2,
              "name": "The Name",
            },
            "postcodeDistrict": null,
          }
        }
      />
    </LazyLoad>
  </BasicSection>
</React.Fragment>
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly 1`] = `
<div
  className="src-shared-components-dropdown-index__container"
>
  <DropdownButton
    ariaHaspopup={true}
    compact={true}
    dropdownIsOpen={false}
    label="a"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
  />
  <Overlay
    container={
      Dropdown {
        "_closeMenu": [Function],
        "_getOverlayTarget": [Function],
        "context": Object {},
        "handleBlur": [Function],
        "handleButtonClick": [Function],
        "handleContainerMounted": [Function],
        "handleFocus": [Function],
        "handleHeaderButtonMounted": [Function],
        "handleItemClick": [Function],
        "handleItemMouseEnter": [Function],
        "handleKeyDown": [Function],
        "handleKeyPress": [Function],
        "props": Object {
          "compact": true,
          "items": Array [
            Object {
              "label": "A",
              "value": "a",
            },
            Object {
              "label": "B",
              "value": "b",
            },
          ],
          "onChange": [Function],
          "value": "a",
        },
        "refs": Object {},
        "state": Object {
          "isOpen": false,
          "selectedIndex": null,
        },
        "updater": Updater {
          "_callbacks": Array [],
          "_renderer": ReactShallowRenderer {
            "_context": Object {},
            "_element": <Dropdown
              compact={true}
              items={
                Array [
                  Object {
                    "label": "A",
                    "value": "a",
                  },
                  Object {
                    "label": "B",
                    "value": "b",
                  },
                ]
              }
              onChange={[Function]}
              value="a"
            />,
            "_forcedUpdate": false,
            "_instance": [Circular],
            "_newState": null,
            "_rendered": <div
              className="src-shared-components-dropdown-index__container"
            >
              <DropdownButton
                ariaHaspopup={true}
                compact={true}
                dropdownIsOpen={false}
                label="a"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
              />
              <Overlay
                container={[Circular]}
                onHide={[Function]}
                placement="bottom"
                rootClose={true}
                shouldUpdatePosition={true}
                show={false}
                target={[Function]}
                transition={[Function]}
              >
                <DropdownMenu
                  compact={true}
                  items={
                    Array [
                      Object {
                        "label": "A",
                        "value": "a",
                      },
                      Object {
                        "label": "B",
                        "value": "b",
                      },
                    ]
                  }
                  onClick={[Function]}
                  onMouseEnter={[Function]}
                  selectedIndex={null}
                />
              </Overlay>
            </div>,
            "_rendering": false,
            "_updater": [Circular],
          },
        },
      }
    }
    onHide={[Function]}
    placement="bottom"
    rootClose={true}
    shouldUpdatePosition={true}
    show={false}
    target={[Function]}
    transition={[Function]}
  >
    <DropdownMenu
      compact={true}
      items={
        Array [
          Object {
            "label": "A",
            "value": "a",
          },
          Object {
            "label": "B",
            "value": "b",
          },
        ]
      }
      onClick={[Function]}
      onMouseEnter={[Function]}
      selectedIndex={null}
    />
  </Overlay>
</div>
`;

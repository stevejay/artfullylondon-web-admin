// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly when auto login not yet attempted 1`] = `""`;

exports[`should render correctly when logged in 1`] = `
<Page>
  <withRouter(Connect(Sidenav))
    onHide={[Function]}
    pathname="/some/path"
    show={false}
  />
  <Connect(Quicksearch)
    onHide={[Function]}
    show={false}
  />
  <React.Fragment>
    <PageHeader>
      <withRouter(Connect(withState(Header)))
        onShowQuicksearch={[Function]}
        onShowSidenav={[Function]}
        showingSidenav={false}
      />
    </PageHeader>
    <PageMain>
      <Switch>
        <Route
          component={[Function]}
          exact={true}
          path="/"
        />
        <Route
          component={[Function]}
          path="/tags/:type"
        />
        <Route
          component={[Function]}
          path="/search"
        />
        <Route
          exact={true}
          path="/talent"
          render={[Function]}
        />
        <Route
          exact={true}
          path="/talent/edit/(.*)"
          render={[Function]}
        />
        <Route
          exact={true}
          path="/talent/(.*)"
          render={[Function]}
        />
        <Route
          exact={true}
          path="/venue"
          render={[Function]}
        />
        <Route
          exact={true}
          path="/venue/edit/(.*)"
          render={[Function]}
        />
        <Route
          exact={true}
          path="/venue/(.*)"
          render={[Function]}
        />
        <Route
          exact={true}
          path="/event-series"
          render={[Function]}
        />
        <Route
          exact={true}
          path="/event-series/edit/(.*)"
          render={[Function]}
        />
        <Route
          exact={true}
          path="/event-series/(.*)"
          render={[Function]}
        />
        <Redirect
          from="/login"
          push={false}
          to="/"
        />
        <Route
          component={[Function]}
        />
      </Switch>
    </PageMain>
    <PageFooter>
      <withState(Footer) />
    </PageFooter>
  </React.Fragment>
  <Connect(withState(AppUpdater)) />
  <Connect(NotificationContainer) />
</Page>
`;

exports[`should render correctly when not logged in 1`] = `
<Page>
  <withRouter(Connect(Sidenav))
    onHide={[Function]}
    pathname="/some/path"
    show={false}
  />
  <Connect(Quicksearch)
    onHide={[Function]}
    show={false}
  />
  <PageMain>
    <Switch>
      <Route
        component={[Function]}
        exact={true}
        path="/login"
      />
      <Redirect
        push={false}
        to="/login"
      />
    </Switch>
  </PageMain>
  <Connect(withState(AppUpdater)) />
  <Connect(NotificationContainer) />
</Page>
`;
